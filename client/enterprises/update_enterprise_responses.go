// Code generated by go-swagger; DO NOT EDIT.

package enterprises

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	apiserver_params "github.com/cloudbase/garm/apiserver/params"
	garm_params "github.com/cloudbase/garm/params"
)

// UpdateEnterpriseReader is a Reader for the UpdateEnterprise structure.
type UpdateEnterpriseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateEnterpriseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateEnterpriseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpdateEnterpriseDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateEnterpriseOK creates a UpdateEnterpriseOK with default headers values
func NewUpdateEnterpriseOK() *UpdateEnterpriseOK {
	return &UpdateEnterpriseOK{}
}

/*
UpdateEnterpriseOK describes a response with status code 200, with default header values.

Enterprise
*/
type UpdateEnterpriseOK struct {
	Payload garm_params.Enterprise
}

// IsSuccess returns true when this update enterprise o k response has a 2xx status code
func (o *UpdateEnterpriseOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update enterprise o k response has a 3xx status code
func (o *UpdateEnterpriseOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update enterprise o k response has a 4xx status code
func (o *UpdateEnterpriseOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update enterprise o k response has a 5xx status code
func (o *UpdateEnterpriseOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update enterprise o k response a status code equal to that given
func (o *UpdateEnterpriseOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update enterprise o k response
func (o *UpdateEnterpriseOK) Code() int {
	return 200
}

func (o *UpdateEnterpriseOK) Error() string {
	return fmt.Sprintf("[PUT /enterprises/{enterpriseID}][%d] updateEnterpriseOK  %+v", 200, o.Payload)
}

func (o *UpdateEnterpriseOK) String() string {
	return fmt.Sprintf("[PUT /enterprises/{enterpriseID}][%d] updateEnterpriseOK  %+v", 200, o.Payload)
}

func (o *UpdateEnterpriseOK) GetPayload() garm_params.Enterprise {
	return o.Payload
}

func (o *UpdateEnterpriseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEnterpriseDefault creates a UpdateEnterpriseDefault with default headers values
func NewUpdateEnterpriseDefault(code int) *UpdateEnterpriseDefault {
	return &UpdateEnterpriseDefault{
		_statusCode: code,
	}
}

/*
UpdateEnterpriseDefault describes a response with status code -1, with default header values.

APIErrorResponse
*/
type UpdateEnterpriseDefault struct {
	_statusCode int

	Payload apiserver_params.APIErrorResponse
}

// IsSuccess returns true when this update enterprise default response has a 2xx status code
func (o *UpdateEnterpriseDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update enterprise default response has a 3xx status code
func (o *UpdateEnterpriseDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update enterprise default response has a 4xx status code
func (o *UpdateEnterpriseDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update enterprise default response has a 5xx status code
func (o *UpdateEnterpriseDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update enterprise default response a status code equal to that given
func (o *UpdateEnterpriseDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update enterprise default response
func (o *UpdateEnterpriseDefault) Code() int {
	return o._statusCode
}

func (o *UpdateEnterpriseDefault) Error() string {
	return fmt.Sprintf("[PUT /enterprises/{enterpriseID}][%d] UpdateEnterprise default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateEnterpriseDefault) String() string {
	return fmt.Sprintf("[PUT /enterprises/{enterpriseID}][%d] UpdateEnterprise default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateEnterpriseDefault) GetPayload() apiserver_params.APIErrorResponse {
	return o.Payload
}

func (o *UpdateEnterpriseDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
