// Code generated by go-swagger; DO NOT EDIT.

package repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewListReposParams creates a new ListReposParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListReposParams() *ListReposParams {
	return &ListReposParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListReposParamsWithTimeout creates a new ListReposParams object
// with the ability to set a timeout on a request.
func NewListReposParamsWithTimeout(timeout time.Duration) *ListReposParams {
	return &ListReposParams{
		timeout: timeout,
	}
}

// NewListReposParamsWithContext creates a new ListReposParams object
// with the ability to set a context for a request.
func NewListReposParamsWithContext(ctx context.Context) *ListReposParams {
	return &ListReposParams{
		Context: ctx,
	}
}

// NewListReposParamsWithHTTPClient creates a new ListReposParams object
// with the ability to set a custom HTTPClient for a request.
func NewListReposParamsWithHTTPClient(client *http.Client) *ListReposParams {
	return &ListReposParams{
		HTTPClient: client,
	}
}

/*
ListReposParams contains all the parameters to send to the API endpoint

	for the list repos operation.

	Typically these are written to a http.Request.
*/
type ListReposParams struct {

	/* Endpoint.

	   Exact endpoint name to filter by
	*/
	Endpoint *string

	/* Name.

	   Exact repository name to filter by
	*/
	Name *string

	/* Owner.

	   Exact owner name to filter by
	*/
	Owner *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list repos params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListReposParams) WithDefaults() *ListReposParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list repos params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListReposParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the list repos params
func (o *ListReposParams) WithTimeout(timeout time.Duration) *ListReposParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list repos params
func (o *ListReposParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list repos params
func (o *ListReposParams) WithContext(ctx context.Context) *ListReposParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list repos params
func (o *ListReposParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list repos params
func (o *ListReposParams) WithHTTPClient(client *http.Client) *ListReposParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list repos params
func (o *ListReposParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndpoint adds the endpoint to the list repos params
func (o *ListReposParams) WithEndpoint(endpoint *string) *ListReposParams {
	o.SetEndpoint(endpoint)
	return o
}

// SetEndpoint adds the endpoint to the list repos params
func (o *ListReposParams) SetEndpoint(endpoint *string) {
	o.Endpoint = endpoint
}

// WithName adds the name to the list repos params
func (o *ListReposParams) WithName(name *string) *ListReposParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the list repos params
func (o *ListReposParams) SetName(name *string) {
	o.Name = name
}

// WithOwner adds the owner to the list repos params
func (o *ListReposParams) WithOwner(owner *string) *ListReposParams {
	o.SetOwner(owner)
	return o
}

// SetOwner adds the owner to the list repos params
func (o *ListReposParams) SetOwner(owner *string) {
	o.Owner = owner
}

// WriteToRequest writes these params to a swagger request
func (o *ListReposParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Endpoint != nil {

		// query param endpoint
		var qrEndpoint string

		if o.Endpoint != nil {
			qrEndpoint = *o.Endpoint
		}
		qEndpoint := qrEndpoint
		if qEndpoint != "" {

			if err := r.SetQueryParam("endpoint", qEndpoint); err != nil {
				return err
			}
		}
	}

	if o.Name != nil {

		// query param name
		var qrName string

		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.Owner != nil {

		// query param owner
		var qrOwner string

		if o.Owner != nil {
			qrOwner = *o.Owner
		}
		qOwner := qrOwner
		if qOwner != "" {

			if err := r.SetQueryParam("owner", qOwner); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
