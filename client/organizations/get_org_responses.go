// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	apiserver_params "github.com/cloudbase/garm/apiserver/params"
	garm_params "github.com/cloudbase/garm/params"
)

// GetOrgReader is a Reader for the GetOrg structure.
type GetOrgReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrgReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrgOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetOrgDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetOrgOK creates a GetOrgOK with default headers values
func NewGetOrgOK() *GetOrgOK {
	return &GetOrgOK{}
}

/*
GetOrgOK describes a response with status code 200, with default header values.

Organization
*/
type GetOrgOK struct {
	Payload garm_params.Organization
}

// IsSuccess returns true when this get org o k response has a 2xx status code
func (o *GetOrgOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get org o k response has a 3xx status code
func (o *GetOrgOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org o k response has a 4xx status code
func (o *GetOrgOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get org o k response has a 5xx status code
func (o *GetOrgOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get org o k response a status code equal to that given
func (o *GetOrgOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get org o k response
func (o *GetOrgOK) Code() int {
	return 200
}

func (o *GetOrgOK) Error() string {
	return fmt.Sprintf("[GET /organizations/{orgID}][%d] getOrgOK  %+v", 200, o.Payload)
}

func (o *GetOrgOK) String() string {
	return fmt.Sprintf("[GET /organizations/{orgID}][%d] getOrgOK  %+v", 200, o.Payload)
}

func (o *GetOrgOK) GetPayload() garm_params.Organization {
	return o.Payload
}

func (o *GetOrgOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgDefault creates a GetOrgDefault with default headers values
func NewGetOrgDefault(code int) *GetOrgDefault {
	return &GetOrgDefault{
		_statusCode: code,
	}
}

/*
GetOrgDefault describes a response with status code -1, with default header values.

APIErrorResponse
*/
type GetOrgDefault struct {
	_statusCode int

	Payload apiserver_params.APIErrorResponse
}

// IsSuccess returns true when this get org default response has a 2xx status code
func (o *GetOrgDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get org default response has a 3xx status code
func (o *GetOrgDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get org default response has a 4xx status code
func (o *GetOrgDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get org default response has a 5xx status code
func (o *GetOrgDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get org default response a status code equal to that given
func (o *GetOrgDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get org default response
func (o *GetOrgDefault) Code() int {
	return o._statusCode
}

func (o *GetOrgDefault) Error() string {
	return fmt.Sprintf("[GET /organizations/{orgID}][%d] GetOrg default  %+v", o._statusCode, o.Payload)
}

func (o *GetOrgDefault) String() string {
	return fmt.Sprintf("[GET /organizations/{orgID}][%d] GetOrg default  %+v", o._statusCode, o.Payload)
}

func (o *GetOrgDefault) GetPayload() apiserver_params.APIErrorResponse {
	return o.Payload
}

func (o *GetOrgDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
