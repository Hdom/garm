// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	garm_params "github.com/cloudbase/garm/params"
)

// NewUpdateOrgPoolParams creates a new UpdateOrgPoolParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateOrgPoolParams() *UpdateOrgPoolParams {
	return &UpdateOrgPoolParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateOrgPoolParamsWithTimeout creates a new UpdateOrgPoolParams object
// with the ability to set a timeout on a request.
func NewUpdateOrgPoolParamsWithTimeout(timeout time.Duration) *UpdateOrgPoolParams {
	return &UpdateOrgPoolParams{
		timeout: timeout,
	}
}

// NewUpdateOrgPoolParamsWithContext creates a new UpdateOrgPoolParams object
// with the ability to set a context for a request.
func NewUpdateOrgPoolParamsWithContext(ctx context.Context) *UpdateOrgPoolParams {
	return &UpdateOrgPoolParams{
		Context: ctx,
	}
}

// NewUpdateOrgPoolParamsWithHTTPClient creates a new UpdateOrgPoolParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateOrgPoolParamsWithHTTPClient(client *http.Client) *UpdateOrgPoolParams {
	return &UpdateOrgPoolParams{
		HTTPClient: client,
	}
}

/*
UpdateOrgPoolParams contains all the parameters to send to the API endpoint

	for the update org pool operation.

	Typically these are written to a http.Request.
*/
type UpdateOrgPoolParams struct {

	/* Body.

	   Parameters used when updating the organization pool.
	*/
	Body garm_params.UpdatePoolParams

	/* OrgID.

	   Organization ID.
	*/
	OrgID string

	/* PoolID.

	   ID of the organization pool to update.
	*/
	PoolID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update org pool params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateOrgPoolParams) WithDefaults() *UpdateOrgPoolParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update org pool params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateOrgPoolParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update org pool params
func (o *UpdateOrgPoolParams) WithTimeout(timeout time.Duration) *UpdateOrgPoolParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update org pool params
func (o *UpdateOrgPoolParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update org pool params
func (o *UpdateOrgPoolParams) WithContext(ctx context.Context) *UpdateOrgPoolParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update org pool params
func (o *UpdateOrgPoolParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update org pool params
func (o *UpdateOrgPoolParams) WithHTTPClient(client *http.Client) *UpdateOrgPoolParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update org pool params
func (o *UpdateOrgPoolParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update org pool params
func (o *UpdateOrgPoolParams) WithBody(body garm_params.UpdatePoolParams) *UpdateOrgPoolParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update org pool params
func (o *UpdateOrgPoolParams) SetBody(body garm_params.UpdatePoolParams) {
	o.Body = body
}

// WithOrgID adds the orgID to the update org pool params
func (o *UpdateOrgPoolParams) WithOrgID(orgID string) *UpdateOrgPoolParams {
	o.SetOrgID(orgID)
	return o
}

// SetOrgID adds the orgId to the update org pool params
func (o *UpdateOrgPoolParams) SetOrgID(orgID string) {
	o.OrgID = orgID
}

// WithPoolID adds the poolID to the update org pool params
func (o *UpdateOrgPoolParams) WithPoolID(poolID string) *UpdateOrgPoolParams {
	o.SetPoolID(poolID)
	return o
}

// SetPoolID adds the poolId to the update org pool params
func (o *UpdateOrgPoolParams) SetPoolID(poolID string) {
	o.PoolID = poolID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateOrgPoolParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	// path param orgID
	if err := r.SetPathParam("orgID", o.OrgID); err != nil {
		return err
	}

	// path param poolID
	if err := r.SetPathParam("poolID", o.PoolID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
