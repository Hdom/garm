// Code generated by go-swagger; DO NOT EDIT.

package enterprises

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	apiserver_params "github.com/cloudbase/garm/apiserver/params"
	garm_params "github.com/cloudbase/garm/params"
)

// GetEnterpriseReader is a Reader for the GetEnterprise structure.
type GetEnterpriseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEnterpriseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEnterpriseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetEnterpriseDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetEnterpriseOK creates a GetEnterpriseOK with default headers values
func NewGetEnterpriseOK() *GetEnterpriseOK {
	return &GetEnterpriseOK{}
}

/*
GetEnterpriseOK describes a response with status code 200, with default header values.

Enterprise
*/
type GetEnterpriseOK struct {
	Payload garm_params.Enterprise
}

// IsSuccess returns true when this get enterprise o k response has a 2xx status code
func (o *GetEnterpriseOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get enterprise o k response has a 3xx status code
func (o *GetEnterpriseOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get enterprise o k response has a 4xx status code
func (o *GetEnterpriseOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get enterprise o k response has a 5xx status code
func (o *GetEnterpriseOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get enterprise o k response a status code equal to that given
func (o *GetEnterpriseOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get enterprise o k response
func (o *GetEnterpriseOK) Code() int {
	return 200
}

func (o *GetEnterpriseOK) Error() string {
	return fmt.Sprintf("[GET /enterprises/{enterpriseID}][%d] getEnterpriseOK  %+v", 200, o.Payload)
}

func (o *GetEnterpriseOK) String() string {
	return fmt.Sprintf("[GET /enterprises/{enterpriseID}][%d] getEnterpriseOK  %+v", 200, o.Payload)
}

func (o *GetEnterpriseOK) GetPayload() garm_params.Enterprise {
	return o.Payload
}

func (o *GetEnterpriseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEnterpriseDefault creates a GetEnterpriseDefault with default headers values
func NewGetEnterpriseDefault(code int) *GetEnterpriseDefault {
	return &GetEnterpriseDefault{
		_statusCode: code,
	}
}

/*
GetEnterpriseDefault describes a response with status code -1, with default header values.

APIErrorResponse
*/
type GetEnterpriseDefault struct {
	_statusCode int

	Payload apiserver_params.APIErrorResponse
}

// IsSuccess returns true when this get enterprise default response has a 2xx status code
func (o *GetEnterpriseDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get enterprise default response has a 3xx status code
func (o *GetEnterpriseDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get enterprise default response has a 4xx status code
func (o *GetEnterpriseDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get enterprise default response has a 5xx status code
func (o *GetEnterpriseDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get enterprise default response a status code equal to that given
func (o *GetEnterpriseDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get enterprise default response
func (o *GetEnterpriseDefault) Code() int {
	return o._statusCode
}

func (o *GetEnterpriseDefault) Error() string {
	return fmt.Sprintf("[GET /enterprises/{enterpriseID}][%d] GetEnterprise default  %+v", o._statusCode, o.Payload)
}

func (o *GetEnterpriseDefault) String() string {
	return fmt.Sprintf("[GET /enterprises/{enterpriseID}][%d] GetEnterprise default  %+v", o._statusCode, o.Payload)
}

func (o *GetEnterpriseDefault) GetPayload() apiserver_params.APIErrorResponse {
	return o.Payload
}

func (o *GetEnterpriseDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
