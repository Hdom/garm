// Code generated by go-swagger; DO NOT EDIT.

package repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	apiserver_params "github.com/cloudbase/garm/apiserver/params"
	garm_params "github.com/cloudbase/garm/params"
)

// CreateRepoReader is a Reader for the CreateRepo structure.
type CreateRepoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRepoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateRepoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCreateRepoDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateRepoOK creates a CreateRepoOK with default headers values
func NewCreateRepoOK() *CreateRepoOK {
	return &CreateRepoOK{}
}

/*
CreateRepoOK describes a response with status code 200, with default header values.

Repository
*/
type CreateRepoOK struct {
	Payload garm_params.Repository
}

// IsSuccess returns true when this create repo o k response has a 2xx status code
func (o *CreateRepoOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create repo o k response has a 3xx status code
func (o *CreateRepoOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repo o k response has a 4xx status code
func (o *CreateRepoOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create repo o k response has a 5xx status code
func (o *CreateRepoOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create repo o k response a status code equal to that given
func (o *CreateRepoOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create repo o k response
func (o *CreateRepoOK) Code() int {
	return 200
}

func (o *CreateRepoOK) Error() string {
	return fmt.Sprintf("[POST /repositories][%d] createRepoOK  %+v", 200, o.Payload)
}

func (o *CreateRepoOK) String() string {
	return fmt.Sprintf("[POST /repositories][%d] createRepoOK  %+v", 200, o.Payload)
}

func (o *CreateRepoOK) GetPayload() garm_params.Repository {
	return o.Payload
}

func (o *CreateRepoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRepoDefault creates a CreateRepoDefault with default headers values
func NewCreateRepoDefault(code int) *CreateRepoDefault {
	return &CreateRepoDefault{
		_statusCode: code,
	}
}

/*
CreateRepoDefault describes a response with status code -1, with default header values.

APIErrorResponse
*/
type CreateRepoDefault struct {
	_statusCode int

	Payload apiserver_params.APIErrorResponse
}

// IsSuccess returns true when this create repo default response has a 2xx status code
func (o *CreateRepoDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create repo default response has a 3xx status code
func (o *CreateRepoDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create repo default response has a 4xx status code
func (o *CreateRepoDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create repo default response has a 5xx status code
func (o *CreateRepoDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create repo default response a status code equal to that given
func (o *CreateRepoDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create repo default response
func (o *CreateRepoDefault) Code() int {
	return o._statusCode
}

func (o *CreateRepoDefault) Error() string {
	return fmt.Sprintf("[POST /repositories][%d] CreateRepo default  %+v", o._statusCode, o.Payload)
}

func (o *CreateRepoDefault) String() string {
	return fmt.Sprintf("[POST /repositories][%d] CreateRepo default  %+v", o._statusCode, o.Payload)
}

func (o *CreateRepoDefault) GetPayload() apiserver_params.APIErrorResponse {
	return o.Payload
}

func (o *CreateRepoDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
